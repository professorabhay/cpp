Namespaces -> eg ->

1 - login -> getTicket()
2 - signup -> getTicket()

program -> 

{
    getTicket();
    getTicket();
}

Program is confused, which one I have to use and crash [to resolve this -> NAMESPACE]

{
    signup::getTicket()
    login::getTicket()
}

Now, he knows what to use when !

_ at start means private 
__ means system keyword
71 reserved keyword


Qualifiers -

Modification Qualifiers -> const, volatile, mutable
LifeDuration Qualifiers -> static, register, extern [auto - outdated | now its default]

const int a  = 10;

Memory Leaks -


Functions is Methods when written in class 

constructor is a method which calls autometically  while using object. default implicit constructor

* - initialize Pointer
& - reference


Smart Pointers ->  solve to forgot delete. its an wrapper of real "raw" Pointer
new 
delete

keywords use 

Unique Pointers -> Cannot copy them 